{
    "database.host": "The hostname or IP address of the MariaDB database server.",
    "database.user": "The username for connecting to the database.",
    "database.database": "The specific database name to use within the MariaDB server.",
    "redis.host": "The hostname or IP address of the Redis server.",
    "redis.port": "The port number for the Redis server.",
    "redis.db": "The Redis database number to use (typically 0).",
    "redis.streams.balance_updates": "The name of the Redis stream for publishing account balance updates.",
    "redis.streams.price_updates": "The name of the Redis stream for publishing real-time price updates.",
    "celery.schedules.update_balance": "Frequency in seconds for the Celery beat to trigger the balance update task.",
    "celery.schedules.schedule_market_data_fetching": "Frequency in seconds for the Celery beat to trigger market data fetching tasks.",
    "exchanges.hyperliquid.poll_interval": "The number of seconds between price polls for the polling producer.",
    "exchanges.hyperliquid.poll_batch_size": "The number of symbols to fetch in a single batch when polling for prices.",
    "exchanges.hyperliquid.proxy": "Optional list of proxy URLs to use for bypassing exchange IP restrictions.",
    "exchanges.hyperliquid.origin": "Optional origin header to use for exchange requests, for bypassing DDOS protection.",
    "market_data.timeframes": "A list of candlestick timeframes to fetch (e.g., \"1m\", \"4h\").",
    "market_data.concurrency_limit": "The maximum number of market data fetching tasks that can run in parallel.",
    "market_data.lookback_bars": "The number of historical bars to fetch for each timeframe. Can be a default or a map of timeframe to bar count.",
    "reconciliation_engine.rebalance_frequency": "Frequency in seconds for the reconciliation engine to run its portfolio check.",
    "reconciliation_engine.risk_pos_percentage": "The percentage of total account balance to use for sizing new positions.",
    "reconciliation_engine.kelly_threshold": "Maximum Kelly performance scaling threshold (e.g., 0.5 = 50%).",
    "reconciliation_engine.symbols": "The list of trading symbols the system will actively monitor and trade.",
    "reconciliation_engine.observer_nodes": "A list of external observer node URLs used for consensus validation.",
    "reconciliation_engine.minimum_trade_threshold": "The minimum trade value in USD required to execute an order. Prevents dust trades.",
    "reconciliation_engine.order_gateway_url": "The URL of the order gateway service for executing trades.",
    "reconciliation_engine.position_staleness_timeout": "The maximum age in seconds for a position to be considered valid.",
    "reconciliation_engine.order_timeout": "The timeout in seconds for requests made to the order gateway.",
    "take_profit.threshold": "The profit percentage (e.g., 0.03 for 3%) that triggers a take-profit action.",
    "health_monitor.polling_interval": "Frequency in seconds for the health monitor to check system components.",
    "health_monitor.polling_threshold": "The time threshold in seconds for determining if a component is unhealthy.",
    "observability.sampling_rate": "The sampling rate for OpenTelemetry traces. 1.0 is 100%, 0.1 is 10%. Used to reduce noise."
}