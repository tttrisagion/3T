[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tactical-trend-trader"
version = "0.1.0"
description = "Sophisticated service-oriented platform for automated trend trading"
authors = [{name = "3T Team"}]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
dependencies = [
    "opentelemetry-api",
    "opentelemetry-sdk", 
    "opentelemetry-exporter-otlp",
    "opentelemetry-instrumentation-celery",
    "celery[redis]",
    "numba",
    "numpy",
    "mysql-connector-python",
    "ccxt",
    "pyyaml",
]

[project.optional-dependencies]
dev = [
    "ruff",
    "pytest",
    "pytest-cov",
    "eth-account",
    "hyperliquid-python-sdk",
    "mysql-connector-python",
]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by formatter)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
testpaths = ["components/tests", "celery-services/tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--tb=short -v"

[tool.coverage.run]
source = ["components/src", "celery-services/worker", "shared"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]